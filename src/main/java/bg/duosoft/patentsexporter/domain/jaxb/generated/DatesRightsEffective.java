//
// This file was generated by the Eclipse Implementation of JAXB, v3.0.0 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2023.10.25 at 03:57:02 PM EEST 
//


package bg.duosoft.patentsexporter.domain.jaxb.generated;

import java.util.ArrayList;
import java.util.List;
import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlElement;
import jakarta.xml.bind.annotation.XmlElements;
import jakarta.xml.bind.annotation.XmlType;


/**
 * <p>Java class for dates-rights-effective complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="dates-rights-effective"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;choice maxOccurs="unbounded"&gt;
 *         &lt;element ref="{}request-for-examination"/&gt;
 *         &lt;element ref="{}first-examination-report-despatched"/&gt;
 *         &lt;element ref="{}patent-maintained-as-amended"/&gt;
 *         &lt;element ref="{}request-for-conversion-to-national-application"/&gt;
 *         &lt;element ref="{}proceedings-suspended"/&gt;
 *         &lt;element ref="{}proceedings-interrupted"/&gt;
 *         &lt;element ref="{}proceedings-resumed"/&gt;
 *         &lt;element ref="{}notification-of-rights-after-appeal"/&gt;
 *         &lt;element ref="{}date-entering-into-force"/&gt;
 *       &lt;/choice&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "dates-rights-effective", propOrder = {
    "requestForExaminationOrFirstExaminationReportDespatchedOrPatentMaintainedAsAmended"
})
public class DatesRightsEffective {

    @XmlElements({
        @XmlElement(name = "request-for-examination", type = RequestForExamination.class),
        @XmlElement(name = "first-examination-report-despatched", type = FirstExaminationReportDespatched.class),
        @XmlElement(name = "patent-maintained-as-amended", type = PatentMaintainedAsAmended.class),
        @XmlElement(name = "request-for-conversion-to-national-application", type = RequestForConversionToNationalApplication.class),
        @XmlElement(name = "proceedings-suspended", type = ProceedingsSuspended.class),
        @XmlElement(name = "proceedings-interrupted", type = ProceedingsInterrupted.class),
        @XmlElement(name = "proceedings-resumed", type = ProceedingsResumed.class),
        @XmlElement(name = "notification-of-rights-after-appeal", type = NotificationOfRightsAfterAppeal.class),
        @XmlElement(name = "date-entering-into-force", type = DateEnteringIntoForce.class)
    })
    protected List<Object> requestForExaminationOrFirstExaminationReportDespatchedOrPatentMaintainedAsAmended;

    /**
     * Gets the value of the requestForExaminationOrFirstExaminationReportDespatchedOrPatentMaintainedAsAmended property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the Jakarta XML Binding object.
     * This is why there is not a <CODE>set</CODE> method for the requestForExaminationOrFirstExaminationReportDespatchedOrPatentMaintainedAsAmended property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getRequestForExaminationOrFirstExaminationReportDespatchedOrPatentMaintainedAsAmended().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link RequestForExamination }
     * {@link FirstExaminationReportDespatched }
     * {@link PatentMaintainedAsAmended }
     * {@link RequestForConversionToNationalApplication }
     * {@link ProceedingsSuspended }
     * {@link ProceedingsInterrupted }
     * {@link ProceedingsResumed }
     * {@link NotificationOfRightsAfterAppeal }
     * {@link DateEnteringIntoForce }
     * 
     * 
     */
    public List<Object> getRequestForExaminationOrFirstExaminationReportDespatchedOrPatentMaintainedAsAmended() {
        if (requestForExaminationOrFirstExaminationReportDespatchedOrPatentMaintainedAsAmended == null) {
            requestForExaminationOrFirstExaminationReportDespatchedOrPatentMaintainedAsAmended = new ArrayList<Object>();
        }
        return this.requestForExaminationOrFirstExaminationReportDespatchedOrPatentMaintainedAsAmended;
    }

}
